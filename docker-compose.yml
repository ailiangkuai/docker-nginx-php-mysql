version: '3'
services:
    web:
        image: nginx:alpine
        container_name: web
        volumes:
            - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./etc/ssl:/etc/ssl"
            - "D:/wwwroot:/wwwroot"
            - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
            - "./log/nginx/:/var/log/nginx/"
        ports:
            - "8000:80"
            - "3000:443"
            - "8081:8081"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
            - mysqldb
            - redis
    php:
        image: nanoninja/php-fpm:${PHP_VERSION}
        container_name: php
        restart: always
        volumes:
            - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "D:/wwwroot:/wwwroot"
        working_dir: /wwwroot/hytj_www/jiaoyisuo08/jiaoyisuo08_backend
    # composer:
    #     image: "composer"
    #     volumes:
    #         - "D:/wwwroot:/wwwroot"
    #     command: install
    redis:
        image: redis:${REDIS_VERSION}
        container_name: redis
        ports:
        - "26379:$REDIS_PORT"
        volumes:
        - ./data/redis-data:/data
        command: redis-server --port $REDIS_PORT --requirepass $REDIS_PASS  --appendonly yes
    mysqldb:
        image: mysql:${MYSQL_VERSION}
        container_name: mysql
        restart: always
        env_file:
            - ".env"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        ports:
            - "23306:23306"
        volumes:
            - "./data/db/mysql:/var/lib/mysql"
            - "./etc/mysql/conf.d/my-custom.cnf:/etc/mysql/conf.d/my-custom.cnf:ro"       